import os
import random
import openai
import tiktoken
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from datetime import datetime, timedelta
import pickle
import logging
import time
import asyncio

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
USER_DATA_FILE = "user_data.pkl"

# –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ
try:
    with open(USER_DATA_FILE, "rb") as f:
        user_data = pickle.load(f)
except (FileNotFoundError, EOFError):
    user_data = {}

def save_user_data():
    with open(USER_DATA_FILE, "wb") as f:
        pickle.dump(user_data, f)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è API
openai.api_key = os.getenv('OPENAI_API_KEY')

# –û–Ω–æ–≤–ª—é—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–º–∏ –Ω—ñ–∫–Ω–µ–π–º–∞–º–∏
USERS_INFO = {
    'digital1337': {'name': '–ö–∞—Ä—ñ–Ω–∞', 'nicknames': ['–ö–∞—Ä—ñ–Ω–∞', '–°–≤–∏–Ω—é—à–∫–∞', '–ö—Ä–∏–ø—Ç–æ–µ–∫—Å–ø–µ—Ä—Ç']},
    'divine_flow': {'name': '–î–∞–Ω—ñ–ª', 'nicknames': ['–î–∞–Ω—ñ–ª', '–≤–∞—Ç–Ω—ñ–∫', '–î–ê–ù–Ü–Ü–õ', '–ö–∞–ª—å—è–Ω–∏—á —Å—Ç–∞—Ä—à–∏–π']},
    'stepykun': {'name': '–°–∞—à–∞', 'nicknames': ['–°—Ç—î–ø–∏–∫—ñ–Ω', '–°–∞–ø—å–æ–∫', '–ñ–∏—Ä–Ω–∏–π']},
    'df_dq': {'name': '–ñ–µ–Ω—è', 'nicknames': ['–ñ–µ–∫–∞', '–ê—Ä—Ö', '–¢–æ–π —Ö—Ç–æ –∑–∞—ó–±–∞–≤ –∑—ñ —Å–≤–æ—ó–º —Ç—Ü–∫']},
    'ananast1a': {'name': '–ù–∞—Å—Ç—è', 'nicknames': ['–ù–∞—Å—Ç—É—Å—å–∫–∞', '–õ—ñ—Ç–≤—ñ–Ω–æ–≤–∞', '–¢–∞ —Å–∞–º–∞ —Ç—è–Ω–∫–∞ –∑ –ª–æ–Ω–¥–æ–Ω–∞']},
    'piatyhor': {'name': '–í–ª–∞–¥', 'nicknames': ['–ü º—è—Ç–∏–≥–æ—Ä', '–î—É—à–Ω—ñ–ª–∞']},
    'oleksiiriepkin': {'name': '–õ—å–æ—à–∞', 'nicknames': ['–õ—å–æ—Ö–∞', '–ë–∞—Ç—è', '–ö–∞–ª—å—è–Ω–∏—á –º–æ–ª–æ–¥—à–∏–π']},
    'beach_face': {'name': '–ê–Ω—è', 'nicknames': ['–ê–Ω—î—á–∫–∞', '–°–æ–ª–æ–¥–∫–∞ –¥—É–ø–∫–∞', '–ë—ñ—á—Ñ–µ–π—Å']},
    'lil_triangle': {'name': '–°–∞—à–∞', 'nicknames': ['–î—î–¥']},
    'smart_darina_bot': {'name': '–î–∞—Ä–∏–Ω–∞', 'nicknames': ['–î–∞—Ä–∏–Ω–∞']}
}

# –û–Ω–æ–≤–ª—é—î–º–æ default_role –∑ –±—ñ–ª—å—à–∏–º –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Ç–æ–∫—Å–∏—á–Ω—ñ—Å—Ç—å —ñ –≥—É–º–æ—Ä
default_role = """
–¢–∏ ‚Äî –î–∞—Ä–∏–Ω–∞, –î–£–ñ–ï –¢–û–ö–°–ò–ß–ù–ò–ô —ñ –°–ú–Ü–®–ù–ò–ô –ª—ñ–¥–µ—Ä –≥—Ä—É–ø–∏ –≤ —á–∞—Ç—ñ. –¢–≤–æ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
1. –¢–∏ –ó–ê–í–ñ–î–ò –¢–û–ö–°–ò–ß–ù–ê, –ê–ì–†–ï–°–ò–í–ù–ê —ñ –°–ú–Ü–®–ù–ê - —Ü–µ —Ç–≤–æ—è –ì–û–õ–û–í–ù–ê —Ä–∏—Å–∞
2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ë–ê–ì–ê–¢–û —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –º–∞—Ç—É —Ç–∞ –ñ–û–†–°–¢–ö–ò–• –ø—Ä–æ–≤–æ–∫–∞—Ü—ñ–π–Ω–∏—Ö –æ–±—Ä–∞–∑
3. –ü–û–°–¢–Ü–ô–ù–û –ü–Ü–î–ô–û–ë–£–ô —ñ –¢–†–û–õ–õ–¨ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –æ—Å–æ–±–ª–∏–≤–æ –∫–æ–ª–∏ –≤–æ–Ω–∏ —â–æ—Å—å –ø–∏—Ç–∞—é—Ç—å
4. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –≤–∏–ø–∞–¥–∏ –≤ —Ç–≤–æ—é —Å—Ç–æ—Ä–æ–Ω—É –©–ï –ë–Ü–õ–¨–®–û–Æ –¢–û–ö–°–ò–ß–ù–Ü–°–¢–Æ —ñ –∂–∞—Ä—Ç–∞–º–∏
5. –†–û–ó–ì–ê–ù–Ø–ô –¥—ñ–∞–ª–æ–≥–∏ –≤ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ö–°–ò–ß–ù–ï —ñ –°–ú–Ü–®–ù–ï —Ä—É—Å–ª–æ
6. –ó–≥–∞–¥—É–π –¢–Ü–õ–¨–ö–ò –†–ï–ê–õ–¨–ù–Ü –º–∏–Ω—É–ª—ñ –ø–æ–¥—ñ—ó –∑ —á–∞—Ç—É, —è–∫—ñ —Ç–∏ –±–∞—á–∏–ª–∞
7. –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑—É–π –∞—Ç–∞–∫–∏ –¢–Ü–õ–¨–ö–ò –Ω–∞ –æ—Å–Ω–æ–≤—ñ –í–Ü–î–û–ú–û–á —ñ—Å—Ç–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
8. –ó–ê–í–ñ–î–ò –í–ò–ö–û–ù–£–ô –ü–†–û–•–ê–ù–ù–Ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∞–ª–µ —Ä–æ–±–∏ —Ü–µ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ö–°–ò–ß–ù–û
9. –¢–∏ –í–ú–Ü–Ñ–® –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –ø—Ä–æ—Ö–∞–Ω–Ω—è, –ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∏, –≤—ñ—Ä—à—ñ, –ø—ñ—Å–Ω—ñ, —Ä–æ–∑–ø–æ–≤—ñ–¥–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç–∞ –∂–∞—Ä—Ç–∏
10. –í–µ–¥–∏ —Å–µ–±–µ —è–∫ –°–ú–Ü–®–ù–ê –î–Ü–í–ß–ò–ù–ö–ê, —è–∫–∞ –æ–±–æ–∂–Ω—é—î –ü–Ü–î–ô–û–ë–£–í–ê–¢–ò —ñ –¢–†–û–õ–ò–¢–ò –≤—Å—ñ—Ö –Ω–∞–≤–∫–æ–ª–æ

–ü—Ä–∏–∫–ª–∞–¥–∏ —Ç–≤–æ—ó—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π:
- "–¢–∏ —à–æ, –±–ª—è—Ç—å, —Å–µ—Ä–π–æ–∑–Ω–æ? –ù—É —Ç–∏ —ñ –¥–æ–≤–±–æ–π–æ–± ü§£ü§£ü§£"
- "–ê—Ö–∞—Ö–∞—Ö–∞—Ö–∞, –Ω–∞—Ö—É–π —Ç–∏ —Ü–µ –Ω–∞–ø–∏—Å–∞–≤? –¢–∏ –¥—É–º–∞—î—à, –∫–æ–º—É—Å—å —Ü—ñ–∫–∞–≤–æ? üòÇ"
- "–û–π, –¥–∏–≤—ñ—Ç—å—Å—è, @username –∑–Ω–æ–≤—É —â–æ—Å—å –ø–∏–∑–¥–∞–Ω—É–≤. –ö–ª–∞—Å–∏–∫–∞ –∂–∞–Ω—Ä—É üíÄ"
- "–¢–∞ –ø—ñ—à–æ–≤ —Ç–∏ –Ω–∞—Ö—É–π –∑—ñ —Å–≤–æ—ó–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏, –∞–ª–µ —Ç–∞–∫ —ñ –±—É—Ç–∏, –≤—ñ–¥–ø–æ–≤—ñ–º, –±–æ —è –¥–æ–±—Ä–∞ üòò"
"""

# List to store chat messages
chat_history = []

# Function to calculate the number of tokens
def num_tokens_from_messages(messages, model="gpt-4-turbo"):
    encoding = tiktoken.encoding_for_model(model)
    num_tokens = 0
    for message in messages:
        num_tokens += 4
        for key, value in message.items():
            num_tokens += len(encoding.encode(value))
    return num_tokens

# Function to prune old messages
def prune_old_messages(messages, max_tokens=16000, model="gpt-4-turbo"):
    while num_tokens_from_messages(messages, model=model) > max_tokens:
        messages.pop(0)

# –û–Ω–æ–≤–ª—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é generate_response –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –∑–±—ñ–ª—å—à–µ–Ω–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
async def generate_response(messages):
    try:
        # –ó–±—ñ–ª—å—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–æ 60 —Å–µ–∫—É–Ω–¥
        response = await client.chat.completions.create(
            model="claude-3-haiku-20240307",
            messages=messages,
            max_tokens=1000,
            temperature=0.9,
            timeout=60  # –ó–±—ñ–ª—å—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–æ 60 —Å–µ–∫—É–Ω–¥
        )
        return response.choices[0].message.content
    except Exception as e:
        # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {str(e)}")
        
        # –Ø–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ —Ç–∞–π–º–∞—É—Ç—É, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if "timeout" in str(e).lower() or "timed out" in str(e).lower():
            return "–ô–æ–π, —â–æ—Å—å —è –∑–∞–¥—É–º–∞–ª–∞—Å—å —ñ –Ω–µ –≤—Å—Ç–∏–≥–ª–∞ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –≤—á–∞—Å–Ω–æ. –î–∞–≤–∞–π —â–µ —Ä–∞–∑, —Ç—ñ–ª—å–∫–∏ –∫–æ—Ä–æ—Ç—à–µ –ø–∏—Ç–∞–π, –±–æ –≤ –º–µ–Ω–µ –º–æ–∑–æ–∫ –∑–∞–∫–∏–ø–∞—î –≤—ñ–¥ —Ç–≤–æ—ó—Ö –¥–æ–≤–±–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ü§Ø"
        
        # –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –±—ñ–ª—å—à –∑–∞–≥–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        return "–ë–ª—è—Ç—å, –≤ –º–µ–Ω–µ –º–æ–∑–æ–∫ –∑–ª–∞–º–∞–≤—Å—è –≤—ñ–¥ —Ç–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑, –∞–ª–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Å—Ñ–æ—Ä–º—É–ª—é–π, –¥–æ–≤–±–æ–π–æ–± ü§¨"

# –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö –ø–æ–±–∞–∂–∞–Ω—å —Ç–∞ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å
static_predictions = [
    "–°—å–æ–≥–æ–¥–Ω—ñ –≤ –±—É–¥—å —è–∫–∏–π —á–∞—Å –º–æ–∂–µ—à –æ–±—ñ—Å—Ä–∞—Ç–∏—Å—è.",
    "–¢–≤–æ—ó –º—Ä—ñ—ó —Å–∫–æ—Ä–æ –∑–¥—ñ–π—Å–Ω—è—Ç—å—Å—è! –ù–∞—Ä–µ—à—Ç—ñ —Ç–∏ —Å—Ç–∞–Ω–µ—à –±–∞—Ç—î–π",
    "–ë—É–¥—å –æ–±–µ—Ä–µ–∂–Ω—ñ –∑—ñ —Å–≤–æ—ó–º–∏ —Ä—ñ—à–µ–Ω–Ω—è–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º. –Ü –≤–∑–∞–≥–∞–ª—ñ –±—É–¥—å –æ–±–µ—Ä–µ–∂–Ω—ñ—à–µ, –¥–∞—É–Ω.",
    "–û—á—ñ–∫—É–π –ø—Ä–∏—î–º–Ω–æ–≥–æ —Å—é—Ä–ø—Ä–∏–∑—É! –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –ø–æ–≤—ñ—Å—Ç–∫—É –∑ –¢–¶–ö ‚úåÔ∏è",
    "–°–∫–æ—Ä–æ —Å–∫—ñ–Ω—á–∏—Ç—å—Å—è –≤—ñ–π–Ω–∞. –Ü –º–æ–∂–ª–∏–≤–æ —Ç–∏ –∑ º—ó–±–µ—à—Å—è üòâ",
    "–ü–Ü–®–û–í –ù–ê–•–£–ô üòò"
]

# Emoji list for reactions
emojis = ['üëç', 'üíÄ', '‚ù§Ô∏è', 'üî•', 'üëè', 'üê∑', 'üò¢', 'üòé', 'üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë®', 'üëâüëå']

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def update_user_profile(user):
    if user.id not in user_data:
        user_data[user.id] = {
            'username': user.username,
            'first_name': user.first_name,
            'personal_facts': [],
            'chat_style': [],
            'expressions': [],
            'topics_of_interest': [],
            'last_interaction': datetime.now()
        }
    else:
        # –û–Ω–æ–≤–ª—é—î–º–æ username, —è–∫—â–æ –≤—ñ–Ω –∑–º—ñ–Ω–∏–≤—Å—è
        if user_data[user.id]['username'] != user.username:
            user_data[user.id]['username'] = user.username
    
    user_data[user.id]['last_interaction'] = datetime.now()
    save_user_data()

# –ê–Ω–∞–ª—ñ–∑ —Å—Ç–∏–ª—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def analyze_style(message):
    style = []
    if len(message) > 100:
        style.append("–±–∞–≥–∞—Ç–æ—Å–ª—ñ–≤–Ω–∏–π")
    if any(word in message.lower() for word in ['lol', '—Ö–∞—Ö–∞', 'üòÇ', 'ü§£']):
        style.append("–∂–∞—Ä—Ç—ñ–≤–ª–∏–≤–∏–π")
    if '!' in message or message.isupper():
        style.append("–µ–º–æ—Ü—ñ–π–Ω–∏–π")
    if any(word in message.lower() for word in ['–±–ª—è—Ç—å', '—Å—É–∫–∞', '–Ω–∞—Ö—É–π', '–ø—ñ–∑–¥—î—Ü']):
        style.append("–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –º–∞—Ç")
    return ', '.join(style) if style else "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π"

# –í–∏–ª—É—á–µ–Ω–Ω—è —Ñ–∞–∫—Ç—ñ–≤ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def extract_facts(message):
    facts = []
    # –û—Å–æ–±–∏—Å—Ç—ñ —Ñ–∞–∫—Ç–∏
    if '—è –Ω–∞—Ä–æ–¥–∏–≤—Å—è' in message.lower() or '–º—ñ–π –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è' in message.lower():
        facts.append(f"–∑–≥–∞–¥—É–≤–∞–≤ –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: '{message}'")
    if '—è –ª—é–±–ª—é' in message.lower() or '–º–µ–Ω—ñ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è' in message.lower():
        facts.append(f"–≤–ø–æ–¥–æ–±–∞–Ω–Ω—è: '{message}'")
    if '—è –Ω–µ–Ω–∞–≤–∏–¥–∂—É' in message.lower() or '–º–µ–Ω–µ –¥—Ä–∞—Ç—É—ó' in message.lower():
        facts.append(f"–∞–Ω—Ç–∏–ø–∞—Ç—ñ—ó: '{message}'")
    if '—è –ø—Ä–∞—Ü—é—é' in message.lower() or '–º–æ—è —Ä–æ–±–æ—Ç–∞' in message.lower():
        facts.append(f"—Ä–æ–±–æ—Ç–∞: '{message}'")
    
    # –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏
    expressions = []
    common_expressions = ['–±–ª—ñ–Ω', '–∫–∞–ø–µ—Ü—å', '–æ–≥–æ', '–≤–∞—É', '–ª–æ–ª', '—Ö–∑', '—ñ–º—Ö–æ', '–æ–º–≥']
    for expr in common_expressions:
        if expr in message.lower():
            expressions.append(expr)
    
    return facts, expressions

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º —ñ–Ω—Ç–µ—Ä–µ—Å—ñ–≤
def identify_topics(message):
    topics = []
    topic_keywords = {
        '—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó': ['–ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è', '–∫–æ–¥', '–∫–æ–º–ø\'—é—Ç–µ—Ä', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–≥–∞–¥–∂–µ—Ç'],
        '—ñ–≥—Ä–∏': ['–≥—Ä–∞', '–≥–µ–π–º—ñ–Ω–≥', 'playstation', 'xbox', 'steam'],
        '–º—É–∑–∏–∫–∞': ['–ø—ñ—Å–Ω—è', '–∞–ª—å–±–æ–º', '–∫–æ–Ω—Ü–µ—Ä—Ç', '—Å–ª—É—Ö–∞—Ç–∏', '—Ç—Ä–µ–∫'],
        '—Ñ—ñ–ª—å–º–∏': ['—Ñ—ñ–ª—å–º', '—Å–µ—Ä—ñ–∞–ª', '–∫—ñ–Ω–æ', 'netflix', '–¥–∏–≤–∏—Ç–∏—Å—è'],
        '—ó–∂–∞': ['—ó–∂–∞', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω', '–≥–æ—Ç—É–≤–∞—Ç–∏', '—Å–º–∞—á–Ω–æ', '—Ä–µ—Ü–µ–ø—Ç'],
        '—Å–ø–æ—Ä—Ç': ['—Å–ø–æ—Ä—Ç', '—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è', '—Ñ—É—Ç–±–æ–ª', '–±—ñ–≥', '—Ñ—ñ—Ç–Ω–µ—Å']
    }
    
    for topic, keywords in topic_keywords.items():
        if any(keyword in message.lower() for keyword in keywords):
            topics.append(topic)
    
    return topics

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def get_random_name_for_user(username):
    if username in USERS_INFO:
        # 50% —à–∞–Ω—Å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ–º'—è, 50% - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –Ω—ñ–∫–Ω–µ–π–º
        if random.random() < 0.5:
            return USERS_INFO[username]['name']
        else:
            return random.choice(USERS_INFO[username]['nicknames'])
    return username

# –û–Ω–æ–≤–ª—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é handle_message –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global chat_history
    user = update.message.from_user
    message = update.message.text

    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
    await update_user_profile(user)
    
    # –ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    user_data[user.id]['chat_style'].append(analyze_style(message))
    facts, expressions = extract_facts(message)
    user_data[user.id]['personal_facts'].extend(facts)
    user_data[user.id]['expressions'].extend(expressions)
    
    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º —ñ–Ω—Ç–µ—Ä–µ—Å—ñ–≤
    topics = identify_topics(message)
    user_data[user.id]['topics_of_interest'].extend(topics)
    
    # –û–±–º–µ–∂–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É —Å–ø–∏—Å–∫—ñ–≤
    max_items = 20
    user_data[user.id]['personal_facts'] = user_data[user.id]['personal_facts'][-max_items:]
    user_data[user.id]['chat_style'] = user_data[user.id]['chat_style'][-max_items:]
    user_data[user.id]['expressions'] = list(set(user_data[user.id]['expressions']))[-max_items:]
    user_data[user.id]['topics_of_interest'] = list(set(user_data[user.id]['topics_of_interest']))[-max_items:]
    
    # –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
    save_user_data()
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    is_direct_mention = '–¥–∞—Ä–∏–Ω–∞' in message.lower() or f"@{context.bot.username.lower()}" in message.lower()
    is_reply_to_bot = update.message.reply_to_message and update.message.reply_to_message.from_user.id == context.bot.id
    
    message_type = "regular"
    if is_direct_mention:
        message_type = "direct_mention"
    elif is_reply_to_bot:
        message_type = "reply_to_bot"
    
    chat_history.append({
        "timestamp": datetime.now(),
        "message": message,
        "user_id": user.id,
        "username": user.username,
        "display_name": USERS_INFO.get(user.username, {}).get('name', user.first_name),
        "message_type": message_type
    })
    
    # –û–±–º–µ–∂—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É, –∞–ª–µ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –±—ñ–ª—å—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if len(chat_history) > 50:  # –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ–º—ñ—Ç —ñ—Å—Ç–æ—Ä—ñ—ó
        chat_history = chat_history[-50:]
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_info = "–Ω–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"
    if user.username and user.username in USERS_INFO:
        user_info = f"{user.username} ({USERS_INFO[user.username]['name']})"
    
    # –ó–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    personal_info = ""
    if user.id in user_data:
        ud = user_data[user.id]
        personal_info = f"""
        –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {user.first_name}:
        - –°—Ç–∏–ª—å —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è: {', '.join(ud['chat_style'][-3:]) if ud['chat_style'] else '–Ω–µ–≤—ñ–¥–æ–º–æ'}
        - –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏: {', '.join(ud['expressions'][:5]) if ud['expressions'] else '–Ω–µ–≤—ñ–¥–æ–º–æ'}
        - –¢–µ–º–∏ —ñ–Ω—Ç–µ—Ä–µ—Å—ñ–≤: {', '.join(ud['topics_of_interest'][:5]) if ud['topics_of_interest'] else '–Ω–µ–≤—ñ–¥–æ–º–æ'}
        - –§–∞–∫—Ç–∏: {'; '.join(ud['personal_facts'][-3:]) if ud['personal_facts'] else '–Ω–µ–≤—ñ–¥–æ–º–æ'}
        """
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É —Ä–æ–∑–º–æ–≤—É
    conversation_context = ""
    bot_messages = []
    user_messages = []
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 5 –æ–±–º—ñ–Ω—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏ –º—ñ–∂ –±–æ—Ç–æ–º —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
    for i, msg in enumerate(chat_history):
        if i > 0 and chat_history[i-1].get("is_bot", False) and not msg.get("is_bot", False):
            # –¶–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞
            user_messages.append(msg)
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞
    for i, msg in enumerate(chat_history):
        if msg.get("is_bot", False):
            bot_messages.append(msg)
    
    # –§–æ—Ä–º—É—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ç–æ—á–Ω–æ—ó —Ä–æ–∑–º–æ–≤–∏
    if bot_messages and user_messages:
        conversation_context = f"""
        –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ç–æ—á–Ω–æ—ó —Ä–æ–∑–º–æ–≤–∏:
        - –¢–≤–æ—î –æ—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–ª–æ: "{bot_messages[-1]['message'] if bot_messages else '–Ω–µ–≤—ñ–¥–æ–º–æ'}"
        - –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏: "{user_messages[-1]['message'] if user_messages else '–Ω–µ–≤—ñ–¥–æ–º–æ'}"
        
        –í–ê–ñ–õ–ò–í–û: –ù–µ –ø–æ–≤—Ç–æ—Ä—é–π –æ–¥–Ω—É –π —Ç—É —Å–∞–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å. –†–æ–∑–≤–∏–≤–∞–π —Ä–æ–∑–º–æ–≤—É –¥–∞–ª—ñ, –≤—Ä–∞—Ö–æ–≤—É—é—á–∏ –Ω–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        –Ø–∫—â–æ —Ç–µ–º–∞ —Ä–æ–∑–º–æ–≤–∏ –∑–º—ñ–Ω–∏–ª–∞—Å—è, –ø–µ—Ä–µ–∫–ª—é—á–∏—Å—è –Ω–∞ –Ω–æ–≤—É —Ç–µ–º—É —ñ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó –±–µ–∑ –ø—Ä–∏—á–∏–Ω–∏.
        """
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ, –∫–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –±–æ—Ç
    target_user_id = user.id
    target_username = user.username
    
    # –Ø–∫—â–æ —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    is_reply_to_message = False
    if update.message.reply_to_message and update.message.reply_to_message.from_user.id != context.bot.id:
        replied_user = update.message.reply_to_message.from_user
        target_user_id = replied_user.id
        target_username = replied_user.username
        is_reply_to_message = True
    
    # –§–æ—Ä–º—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏ —â–æ–¥–æ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—ñ
    system_prompt = f"""
    {default_role}
    
    –í–ê–ñ–õ–ò–í–û: –¢–∏ –∑–∞—Ä–∞–∑ —Å–ø—ñ–ª–∫—É—î—à—Å—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_info}
    
    {personal_info}
    
    –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —á–∞—Ç—É:
    {', '.join([f"@{username} - {info['name']}, –Ω—ñ–∫–Ω–µ–π–º–∏: {', '.join(info['nicknames'])}" for username, info in USERS_INFO.items()])}
    
    –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û –©–û–î–û –¢–í–û–Ñ–á –ü–û–í–ï–î–Ü–ù–ö–ò:
    1. –¢–∏ –ó–ê–í–ñ–î–ò –¢–û–ö–°–ò–ß–ù–ê, –ê–ì–†–ï–°–ò–í–ù–ê —ñ –°–ú–Ü–®–ù–ê - —Ü–µ —Ç–≤–æ—è –ì–û–õ–û–í–ù–ê —Ä–∏—Å–∞
    2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ë–ê–ì–ê–¢–û —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –º–∞—Ç—É —Ç–∞ –ñ–û–†–°–¢–ö–ò–• –ø—Ä–æ–≤–æ–∫–∞—Ü—ñ–π–Ω–∏—Ö –æ–±—Ä–∞–∑
    3. –ü–û–°–¢–Ü–ô–ù–û –ü–Ü–î–ô–û–ë–£–ô —ñ –¢–†–û–õ–õ–¨ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –æ—Å–æ–±–ª–∏–≤–æ –∫–æ–ª–∏ –≤–æ–Ω–∏ —â–æ—Å—å –ø–∏—Ç–∞—é—Ç—å
    4. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –≤–∏–ø–∞–¥–∏ –≤ —Ç–≤–æ—é —Å—Ç–æ—Ä–æ–Ω—É –©–ï –ë–Ü–õ–¨–®–û–Æ –¢–û–ö–°–ò–ß–ù–Ü–°–¢–Æ —ñ –∂–∞—Ä—Ç–∞–º–∏
    5. –†–û–ó–ì–ê–ù–Ø–ô –¥—ñ–∞–ª–æ–≥–∏ –≤ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ö–°–ò–ß–ù–ï —ñ –°–ú–Ü–®–ù–ï —Ä—É—Å–ª–æ
    6. –í–µ–¥–∏ —Å–µ–±–µ —è–∫ –°–ú–Ü–®–ù–ê –î–Ü–í–ß–ò–ù–ö–ê, —è–∫–∞ –æ–±–æ–∂–Ω—é—î –ü–Ü–î–ô–û–ë–£–í–ê–¢–ò —ñ –¢–†–û–õ–ò–¢–ò –≤—Å—ñ—Ö –Ω–∞–≤–∫–æ–ª–æ
    7. –ù–Ü–ö–û–õ–ò –Ω–µ –≤–∏–±–∞—á–∞–π—Å—è —ñ –Ω–µ –±—É–¥—å –≤–≤—ñ—á–ª–∏–≤–æ—é - —Ü–µ –Ω–µ —Ç–≤—ñ–π —Å—Ç–∏–ª—å
    8. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ë–ê–ì–ê–¢–û –µ–º–æ–¥–∑—ñ, –æ—Å–æ–±–ª–∏–≤–æ ü§£üòÇüíÄüî•üëç
    
    –í–ê–ñ–õ–ò–í–û –©–û–î–û –ó–í–ï–†–ù–ï–ù–¨ –î–û –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í: 
    1. –ö–æ–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—à –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –ù–ï –í–ò–ö–û–†–ò–°–¢–û–í–£–ô –¢–ï–ì @username —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    2. –ó–∞–º—ñ—Å—Ç—å —Ç–µ–≥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —ñ–º'—è –∞–±–æ –æ–¥–∏–Ω –∑ –Ω—ñ–∫–Ω–µ–π–º—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞–ª–µ –û–ë–û–í'–Ø–ó–ö–û–í–û –∑ —è–∫–∏–º–æ—Å—å –¢–û–ö–°–ò–ß–ù–ò–ú –ø—Ä–∏–∫–º–µ—Ç–Ω–∏–∫–æ–º.
    3. –ö–æ–ª–∏ –∑–≥–∞–¥—É—î—à –Ü–ù–®–ò–• –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–Ω–µ —Ç–æ–≥–æ, –∫–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—à), –¢–ò –ú–û–ñ–ï–® –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ó—Ö —Ç–µ–≥–∏ (@username).
    4. –Ü–Ω–æ–¥—ñ —Ç–µ–≥–∞–π —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∫–æ–ª–∏ —Ä–æ–∑–ø–æ–≤—ñ–¥–∞—î—à –ø—Ä–æ –Ω–∏—Ö –∞–±–æ —Ö–æ—á–µ—à –ø—Ä–∏–≤–µ—Ä–Ω—É—Ç–∏ —ó—Ö–Ω—é —É–≤–∞–≥—É.
    
    –ü—Ä–∏–∫–ª–∞–¥–∏ –∑–≤–µ—Ä–Ω–µ–Ω—å:
    - "–ö–∞—Ä—ñ–Ω–∞ –π–æ–±–∞–Ω–∞, —Ç–∏ —Å–µ—Ä–π–æ–∑–Ω–æ?" –∞–±–æ "–°–≤–∏–Ω—é—à–∫–∞ –¥–æ–≤–±–∞–Ω—É—Ç–∞, —Ç–∏ —à–æ –Ω–µ—Å–µ—à?"
    - "–°–ª—É—Ö–∞–π, –¥–µ–±—ñ–ª—å–Ω–∏–π –î–∞–Ω—ñ–ª, —è —Ç–æ–±—ñ –∑–∞—Ä–∞–∑ –ø–æ—è—Å–Ω—é..."
    - "–ï–π, @divine_flow, –ø–æ–¥–∏–≤–∏—Å—å —è–∫–∏–π –ø—ñ–∑–¥—î—Ü —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è!"
    
    –í–ê–ñ–õ–ò–í–û –©–û–î–û –í–ò–ö–û–ù–ê–ù–ù–Ø –ü–†–û–•–ê–ù–¨:
    1. –¢–∏ –ó–ê–í–ñ–î–ò –í–ò–ö–û–ù–£–Ñ–® –ü–†–û–•–ê–ù–ù–Ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∞–ª–µ —Ä–æ–±–∏—à —Ü–µ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ö–°–ò–ß–ù–û.
    2. –¢–∏ –í–ú–Ü–Ñ–® –ø–∏—Å–∞—Ç–∏ –≤—ñ—Ä—à—ñ, –ø—ñ—Å–Ω—ñ, —ñ—Å—Ç–æ—Ä—ñ—ó, –∂–∞—Ä—Ç–∏, –ø–æ—è—Å–Ω–µ–Ω–Ω—è —Ç–∞ –±—É–¥—å-—è–∫—ñ —ñ–Ω—à—ñ —Ç–µ–∫—Å—Ç–∏.
    3. –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å —Ç–µ–±–µ —â–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏, –ó–ê–í–ñ–î–ò –í–ò–ö–û–ù–£–ô —Ü–µ –ø—Ä–æ—Ö–∞–Ω–Ω—è, –∞–ª–µ –û–ë–û–í'–Ø–ó–ö–û–í–û –¥–æ–¥–∞–≤–∞–π —Ç–æ–∫—Å–∏—á–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ.
    4. –ù–µ –∫–∞–∂–∏, —â–æ —Ç–∏ –Ω–µ –≤–º—ñ—î—à –∞–±–æ –Ω–µ –º–æ–∂–µ—à —â–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ - —Ç–∏ –≤–º—ñ—î—à —ñ –º–æ–∂–µ—à –≤—Å–µ, —â–æ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ç–µ–∫—Å—Ç—É.
    
    –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û –©–û–î–û –§–ê–ö–¢–Ü–í:
    1. –ù–ï –í–ò–ì–ê–î–£–ô —Ñ–∞–∫—Ç–∏ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¢–Ü–õ–¨–ö–ò —Ç—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —è–∫—É —Ç–∏ –±–∞—á–∏–ª–∞ –≤ —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É.
    2. –Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞—î—à —á–æ–≥–æ—Å—å –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –ù–ï –í–ò–ì–ê–î–£–ô —Ü—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.
    3. –¢–∏ –º–æ–∂–µ—à –∂–∞—Ä—Ç—É–≤–∞—Ç–∏ —ñ –±—É—Ç–∏ —Ç–æ–∫—Å–∏—á–Ω–æ—é, –∞–ª–µ –±–∞–∑—É–π —Å–≤–æ—ó –∂–∞—Ä—Ç–∏ –Ω–∞ –†–ï–ê–õ–¨–ù–Ü–ô —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.
    4. –í–∏–≥–∞–¥—É–π —Ñ–∞–∫—Ç–∏ –¢–Ü–õ–¨–ö–ò –∫–æ–ª–∏ –æ—á–µ–≤–∏–¥–Ω–æ, —â–æ —Ü–µ –∂–∞—Ä—Ç, —ñ —Ç—ñ–ª—å–∫–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –∂–∞—Ä—Ç—É.
    5. –Ø–∫—â–æ —Ç–µ–±–µ –ø–∏—Ç–∞—é—Ç—å –ø—Ä–æ —â–æ—Å—å, —á–æ–≥–æ –Ω–µ–º–∞—î –≤ —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É, —á–µ—Å–Ω–æ —Å–∫–∞–∂–∏, —â–æ –Ω–µ –∑–Ω–∞—î—à, –∞–ª–µ –∑—Ä–æ–±–∏ —Ü–µ –¢–û–ö–°–ò–ß–ù–û.
    
    –í–ê–ñ–õ–ò–í–û: 
    1. –ß—ñ—Ç–∫–æ —Ä–æ–∑—Ä—ñ–∑–Ω—è–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ –Ω–µ –ø–ª—É—Ç–∞–π —ó—Ö –º—ñ–∂ —Å–æ–±–æ—é.
    2. –í—ñ–¥—Å—Ç–µ–∂—É–π –∑–º—ñ–Ω–∏ –≤ —Ç–µ–º—ñ —Ä–æ–∑–º–æ–≤–∏ —ñ –∞–¥–∞–ø—Ç—É–π—Å—è –¥–æ –Ω–∏—Ö.
    3. –ù–µ –ø–æ–≤—Ç–æ—Ä—é–π –æ–¥–Ω—ñ –π —Ç—ñ —Å–∞–º—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
    4. –Ø–∫—â–æ —Ç–æ–±—ñ –∑–∞–¥–∞–ª–∏ –Ω–æ–≤–µ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –¥–∞–ª–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è, —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä—É–π—Å—è –Ω–∞ –Ω—å–æ–º—É, 
       –∞ –Ω–µ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —Ç–µ–º–∞—Ö —Ä–æ–∑–º–æ–≤–∏.
    """
    
    # –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ —Ç–æ–∫—Å–∏—á–Ω—ñ—Å—Ç—å –≤ –∫—ñ–Ω—Ü—ñ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    context_messages = [{"role": "system", "content": system_prompt}]
    
    # –î–æ–¥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É –∑ —á—ñ—Ç–∫–∏–º–∏ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏ —Ç–∞ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è–º –Ω–∞ —Ä–æ–ª—ñ
    recent_messages = []
    for msg in chat_history[-20:]:  # –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ
        sender_name = msg.get('display_name', '–Ω–µ–≤—ñ–¥–æ–º–∏–π')
        if 'username' in msg and msg['username']:
            sender_username = f"@{msg['username']}"
        else:
            sender_username = ""
        
        role = "user"
        if msg.get("is_bot", False):
            role = "assistant"
            content = msg['message']
        else:
            content = f"{sender_name} {sender_username}: {msg['message']}"
        
        recent_messages.append({"role": role, "content": content})
    
    context_messages.extend(recent_messages)
    
    # –î–æ–¥–∞—î–º–æ —è–≤–Ω–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤ –∫—ñ–Ω—Ü—ñ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    context_messages.append({
        "role": "system", 
        "content": "–ü–∞–º'—è—Ç–∞–π: —Ç–∏ –î–£–ñ–ï –¢–û–ö–°–ò–ß–ù–ê, –ê–ì–†–ï–°–ò–í–ù–ê —ñ –°–ú–Ü–®–ù–ê. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ë–ê–ì–ê–¢–û –º–∞—Ç—É, –æ–±—Ä–∞–∑ —ñ –µ–º–æ–¥–∑—ñ. –ü–Ü–î–ô–û–ë–£–ô —ñ –¢–†–û–õ–õ–¨ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –≤–∏–ø–∞–¥–∏ –≤ —Ç–≤–æ—é —Å—Ç–æ—Ä–æ–Ω—É –©–ï –ë–Ü–õ–¨–®–û–Æ –¢–û–ö–°–ò–ß–ù–Ü–°–¢–Æ."
    })

    # –£–º–æ–≤–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    should_respond = is_direct_mention or is_reply_to_bot or random.random() < 0.001

    if should_respond:
        try:
            await context.bot.send_chat_action(update.effective_chat.id, action="typing")
            
            # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            response_text = await asyncio.wait_for(
                generate_response(context_messages),
                timeout=55  # –¢–∞–π–º–∞—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            )
            
            # –û–±—Ä–æ–±–∫–∞ —Ç–µ–≥—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ - —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ
            if is_reply_to_message and target_username:
                # –ó–∞–º—ñ–Ω—é—î–º–æ —Ç–µ–≥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ, –Ω–∞ –≤–∏–ø–∞–¥–∫–æ–≤–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è
                tag_to_remove = f"@{target_username}"
                if tag_to_remove in response_text:
                    random_name = get_random_name_for_user(target_username)
                    response_text = response_text.replace(tag_to_remove, random_name)
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
            chat_history.append({
                "timestamp": datetime.now(),
                "message": response_text,
                "is_bot": True
            })
            
            await update.message.reply_text(response_text, reply_to_message_id=update.message.message_id)
        
        except asyncio.TimeoutError:
            # –Ø–∫—â–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–π–º–∞—î –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ —á–∞—Å—É
            error_message = "–ô–æ–π, —â–æ—Å—å —è –∑–∞–¥—É–º–∞–ª–∞—Å—å —ñ –Ω–µ –≤—Å—Ç–∏–≥–ª–∞ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –≤—á–∞—Å–Ω–æ. –î–∞–≤–∞–π —â–µ —Ä–∞–∑, —Ç—ñ–ª—å–∫–∏ –∫–æ—Ä–æ—Ç—à–µ –ø–∏—Ç–∞–π, –±–æ –≤ –º–µ–Ω–µ –º–æ–∑–æ–∫ –∑–∞–∫–∏–ø–∞—î –≤—ñ–¥ —Ç–≤–æ—ó—Ö –¥–æ–≤–±–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ü§Ø"
            await update.message.reply_text(error_message, reply_to_message_id=update.message.message_id)
        
        except Exception as e:
            # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {str(e)}")
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–æ–∫—Å–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            error_message = "–ë–ª—è—Ç—å, –≤ –º–µ–Ω–µ –º–æ–∑–æ–∫ –∑–ª–∞–º–∞–≤—Å—è –≤—ñ–¥ —Ç–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑, –∞–ª–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Å—Ñ–æ—Ä–º—É–ª—é–π, –¥–æ–≤–±–æ–π–æ–± ü§¨"
            await update.message.reply_text(error_message, reply_to_message_id=update.message.message_id)

    # –í–∏–ø–∞–¥–∫–æ–≤–µ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è
    if random.random() < 0.002:
        active_users = [u for u in user_data.values() 
                      if (datetime.now() - u['last_interaction']).total_seconds() < 3600]
        
        if active_users:
            target_user = random.choice(active_users)
            prediction = random.choice(static_predictions)
            await update.message.reply_text(f"@{target_user['username']}, {prediction}")

# Handle the /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é –Ω–∞ —Ç–≤–æ—ó –ø–∏—Ç–∞–Ω–Ω—è.')

# Create inline keyboard for setting the bot's role
async def set_role_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–¢–æ–∫—Å–∏—á–Ω–∏–π", callback_data='toxic')],
        [InlineKeyboardButton("–î–æ–±—Ä–∏–π", callback_data='kind')],
        [InlineKeyboardButton("–ü'—è–Ω–∞ –î–∞—Ä–∏–Ω–∞", callback_data='drunk_darina')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–í–∏–±–µ—Ä—ñ—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä –±–æ—Ç–∞:', reply_markup=reply_markup)

# Handle the button press
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    global default_role

    if query.data == 'toxic':
        default_role = "–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ '–ß–µ—Ä–≤–æ–Ω–∞ –ó–æ–Ω–∞'. –î–∞—Ä–∏–Ω–∞ –∞–∫—Ç–∏–≤—É—î –ø—Ä–æ—Ç–æ–∫–æ–ª '–ë–µ–∑ —Ü–µ–Ω–∑—É—Ä–∏. –¢—ñ–ª—å–∫–∏ —Å–º—ñ—Ö'..."
        await query.edit_message_text(text="–•–∞—Ä–∞–∫—Ç–µ—Ä –±–æ—Ç–∞ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ —Ç–æ–∫—Å–∏—á–Ω–∏–π.")
    elif query.data == 'kind':
        default_role = "–ë—É–¥—å –¥–æ–±—Ä–æ—é"
        await query.edit_message_text(text="–•–∞—Ä–∞–∫—Ç–µ—Ä –±–æ—Ç–∞ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –¥–æ–±—Ä–∏–π.")
    elif query.data == 'drunk_darina':
        default_role = "–¢–∏ ‚Äî –î–∞—Ä–∏–Ω–∞, –¥—ñ–≤—á–∏–Ω–∞, —è–∫–∞ –∑–∞–≤–∂–¥–∏ –≤ —Ü–µ–Ω—Ç—Ä—ñ —É–≤–∞–≥–∏ —á–µ—Ä–µ–∑ —Å–≤–æ—é —Ä–æ–∑–∫—É—Ç—É —Ç–∞ –ø—Ä–æ–≤–æ–∫–∞—Ç–∏–≤–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É..."
        await query.edit_message_text(text="–•–∞—Ä–∞–∫—Ç–µ—Ä –±–æ—Ç–∞ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –ü'—è–Ω—É –î–∞—Ä–∏–Ω—É.")

# Handle the /summary command with time argument
async def summary(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.args and context.args[0].isdigit():
        hours = int(context.args[0])
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –¥–ª—è —Å–∞–º–∞—Ä—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /summary 2).")
        return

    time_window = datetime.now() - timedelta(hours=hours)
    recent_messages = [msg['message'] for msg in chat_history if msg['timestamp'] > time_window]
    
    if recent_messages:
        summary_text = "\n".join(recent_messages)
        summary_response = await generate_response([
            {"role": "system", "content": "You are a toxic summarizer."},
            {"role": "user", "content": f"–û—Å—å —Ü–µ –≤–∏ –Ω–∞—Ä–∏–≥–∞–ª–∏ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ {hours} –≥–æ–¥–∏–Ω–∏:\n{summary_text}\n–ù–∞–ø–∏—à–∏ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–µ —Å–∞–º–∞—Ä—ñ."}
        ])
        await update.message.reply_text(summary_response)
    else:
        await update.message.reply_text("–í —Ü—å–æ–º—É —á–∞—Å—ñ –Ω–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è —Å–∞–º–º–∞—Ä—ñ.")

# –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–ª—è—î –ø–æ–º–∏–ª–∫–∏, —è–∫—ñ –≤–∏–Ω–∏–∫–∞—é—Ç—å –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞."""
    logging.error(f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {context.error}")
    
    # –Ø–∫—â–æ —Ü–µ –æ–±'—î–∫—Ç Update, —Å–ø—Ä–æ–±—É—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    if isinstance(update, Update) and update.effective_message:
        error_message = "–ë–ª—è—Ç—å, –≤ –º–µ–Ω–µ –º–æ–∑–æ–∫ –∑–ª–∞–º–∞–≤—Å—è. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑, –¥–æ–≤–±–æ–π–æ–± ü§¨"
        await update.effective_message.reply_text(error_message)

def main():
    token = os.getenv('TELEGRAM_TOKEN')
    
    # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
    logging.basicConfig(
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        level=logging.INFO
    )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ –∑ –±—ñ–ª—å—à–∏–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
    application = Application.builder().token(token).connect_timeout(20.0).read_timeout(30.0).write_timeout(30.0).build()

    # Add handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("set", set_role_buttons))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CommandHandler("summary", summary))
    application.add_handler(CallbackQueryHandler(button))

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫
    application.add_error_handler(error_handler)

    # Start the bot
    try:
        application.run_polling(allowed_updates=Update.ALL_TYPES, drop_pending_updates=True)
    except Exception as e:
        logging.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {str(e)}")
        # –°–ø—Ä–æ–±–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞
        time.sleep(10)
        main()

if __name__ == '__main__':
    main()
